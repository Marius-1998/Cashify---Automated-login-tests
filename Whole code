from selenium import webdriver
from selenium.webdriver.chrome.service import Service as ChromeService
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as ec
from selenium.common.exceptions import NoSuchElementException, StaleElementReferenceException, ElementClickInterceptedException, TimeoutException

driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))
URL = "https://kapusta-qa-ro.p.goit.global/"

def tc1_verify_title():
    driver.get(URL)
    title = driver.title
    expected_title = "Cashify"
    if title == expected_title:
        print("Test Passed - Title is correct")
    else:
        print("Test failed - title is: ", title, ". Expected result: ", expected_title)

def tc2_register():
    try:
        username = "test.mail@yahoo.com"
        password = "Testpassword123!@#"
        WebDriverWait(driver, 5).until(ec.presence_of_element_located((By.NAME, "email")))
        driver.find_element(By.NAME, "email").send_keys(username)
        driver.find_element(By.NAME, "password").send_keys(password)
        WebDriverWait(driver, 5).until(ec.element_to_be_clickable((By.CSS_SELECTOR, ".Auth_button__oOib1"))).click()
        print("Passed registration")

        # Check if the "Account already created" message is displayed
        try:
            WebDriverWait(driver, 5).until(ec.visibility_of_element_located((By.XPATH, "//div[contains(text(),'Sorry, but provided email already exists')]")))
            print("Account already created")
            return  # Skip to the next test case
        except TimeoutException:
            pass  # Continue with the registration process if the message is not displayed

        WebDriverWait(driver, 5).until(ec.element_to_be_clickable((By.CSS_SELECTOR, ".UserLogOut_logOutTextBtn__bR9SC"))).click()
        WebDriverWait(driver, 5).until(ec.element_to_be_clickable((By.CSS_SELECTOR, ".Modal_buttonStyles__mzMW-:not(:last-child)"))).click()
        if driver.current_url == "https://kapusta-qa-ro.p.goit.global/":
            print("Logged out - successful")
        else:
            print("Log out - failed")
    except NoSuchElementException:
        print("Element not found. Please check the element's locator.")
    except StaleElementReferenceException:
        print("Stale element reference. The element is no longer attached to the DOM.")
    except ElementClickInterceptedException:
        print("Element click intercepted. Another element would receive the click.")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")
    finally:
        driver.quit() # Quit the driver after test 2



def tc3_login():
    driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))  # Reinitialize the driver for test 3
    driver.get(URL)  # Start a new browser session
    username = "test.mail@yahoo.com"
    password = "Testpassword123!@#"
    try:
        WebDriverWait(driver, 10).until(ec.presence_of_element_located((By.CSS_SELECTOR, ".Auth_input__njf2M")))
        username_input = driver.find_element(By.CSS_SELECTOR, ".Auth_input__njf2M")
        username_input.send_keys(username)

        password_input = driver.find_element(By.NAME, "password")
        password_input.send_keys(password)

        login_button = WebDriverWait(driver, 10).until(
            ec.element_to_be_clickable((By.CSS_SELECTOR, ".Auth_buttonSubmit__ii556")))
        login_button.click()

        # Wait for the page to load after login
        WebDriverWait(driver, 10).until(ec.url_to_be("https://kapusta-qa-ro.p.goit.global/transactions/expenses"))

        print("Passed login")
    except NoSuchElementException as e:
        print("Element not found. Please check the element's locator.")
    except TimeoutException as e:
        print("Timeout occurred while waiting for element.")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")
    finally:
        driver.quit()

tc1_verify_title()
tc2_register()
tc3_login()
